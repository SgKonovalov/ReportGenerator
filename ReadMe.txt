Ссылка для перехода к странице приложения: http://localhost/xlex/start/

ЗАДАЧА: Разработать вэб-сервис по выгрузке Exel-файла (4 столбца наполненные рандомными числами),
после выгрузки осуществляется создание нового файла только с чётными числами.
Необходима возможность просмотра и скачивания конечного файла. 

РЕШЕНИЕ: вэб-сервис, при запуске которого, открывается JSP-страница с подборкой всех сгенерированных рандомных чисел .
Указанный отчёт формируется в виде таблицы, состоящей мз 4-х столбцов, и 5-ти строк (количество можно изменять).
Указанная JSP-страница, содержит ссылку  "Скачать и просмотреть отчёт по чётным числам", при нажатии на которую происходит формирование, выгрузка и сохранение
подборки ТОЛЬКО чётных чисел из таблицы, отображённой на главной странице. После сохранения, выгрузка автоматически открывается для просмотра.

На всякий случай приложил скриншоты работающей программы + выгрзку.

ПОДРОБНОЕ ОПИСАНИЕ:
Использован стек:
1) Java SE 8;
2) Spring WebMVC;
3) Для работы с Excel – Apache POI (сделал под 2003 Excel);
4) Для сборки – Maven;
5) Сервер приложений – Tomcat 9.0.45;
6) FrontEnd – JSP-страница (чтобы использовать фильтры Java(for-each, if));
7) Git для отправления проекта на GitHub.

Само приложение «разбил» на 3 пакета:
1) ru.xlex.Controller – в нём всё, что связано с обработкой "событий" - запросов пользователя и т.д.;
2) ru.xlex.DataModel – всё, что связано с моделью данных;
3) ru.xlex.ExcelGen – всё, что связано с выгрузкой в Excel.

По классам:
1) Пакет ru.xlex.Controller:
	1.1) Класс XlExController – класс, осуществляющий обработку запросов пользователя.
	При создании объекта класса, генерируется коллекция из объектов типа DataModel , для дальнейшего её использования в JSP и выгрузке.
	Изначально переадресовывает запросом GET на jsp страницу с данными всех чисел, при помощи метода: «allNumbers».
	При нажатии на ссылку для получения выгрузки Excel, обработка осуществляется методом «reportLoadAndShow».
2) Пакет ru.xlex.DataModel:
	2.1) Класс DataModel – содержит модель данных для отображения. В нашем случае объект состоит из 4-х чисел (по одному для каждого столбца).
	В классе 2 конструктора: дефолтный + с параметрами;
3) Пакет ru.xlex.ExcelGen:
	3.1) Класс DataFilling – содержит статический метод, использующийся для заполнения коллекции объектов типа DataModel для дальнейшего отображения в JSP-странице и выгрузке.
	3.2) Класс FileGenAndShow – отвечает за создание, сохранения и просмотра выгрузки по чётным числам. Содержит:
		3.2.1) private final static String fileName – директория и наименование файла для сохранения выгрузки;
		3.2.2) private static void createSheet – метод, отвечающий за заполнение строк таблицы Excel. В if-ах – фильтры для отбора чётных значений.
		3.2.3) public void generateFile – формирует сам файл. Использован Apache POI.
		3.2.4) public synchronized void showFile() – открывает файл после сохранения. ВАЖНО: сделал его синхронизированным.
		Т.е. поток метода «ждёт», пока в другом потоке будет создан файл и только потом его открывает,
		чтобы избежать проблемы с открытием «несуществующего» файла.